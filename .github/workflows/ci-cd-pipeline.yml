name: .NET Core CI/CD

on:
  push:
    branches:
      - main  # Trigger CI/CD on push to main
  pull_request:
    branches:
      - main  # Trigger CI/CD on pull request to main

jobs:
  build:
    runs-on: ubuntu-latest  # Use latest Ubuntu environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Updated to latest version

    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'  # Ensure to use .NET 8 SDK

    - name: Restore dependencies
      run: dotnet restore ./TaskManagementAPI/TaskManagementAPI.csproj

    - name: Build the solution
      run: dotnet build ./TaskManagementAPI/TaskManagementAPI.csproj --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ./TaskManagementAPI/TaskManagementAPI.csproj --no-restore --verbosity normal

    - name: Publish the application
      run: |
        mkdir -p ./publish
        dotnet publish ./TaskManagementAPI/TaskManagementAPI.csproj --configuration Release --output ./publish
        ls -la ./publish  # Debugging step to verify publish folder exists

    - name: Archive artifact
      uses: actions/upload-artifact@v4  # Updated to latest version
      with:
        name: published-app
        path: ./publish

  deploy:
    runs-on: ubuntu-latest  # Use latest Ubuntu environment
    needs: build  # This ensures deploy runs after the build job is successful
    environment: production  # Can be used for environment-specific notifications

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install

    - name: Configure AWS credentials
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set region ${{ secrets.AWS_REGION }}

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: published-app
        path: ./publish

    - name: Deploy to AWS Elastic Beanstalk
      run: |
        # Initialize the Elastic Beanstalk app
        eb init -p dotnet-core --region ${{ secrets.AWS_REGION }} --no-verify-ssl

        # Set the environment for deployment
        eb use your-environment-name

        # Deploy the app
        eb deploy
