name: .NET Core CI/CD

on:
  push:
    branches:
      - main  # Trigger CI/CD on push to main
  pull_request:
    branches:
      - main  # Trigger CI/CD on pull request to main

jobs:
  build:
    runs-on: ubuntu-latest  # Use latest Ubuntu environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Checkout repository

    - name: Set up .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'  # Use .NET SDK version

    - name: Restore dependencies
      run: dotnet restore ./TaskManagementAPI/TaskManagementAPI.csproj

    - name: Build the solution
      run: dotnet build ./TaskManagementAPI/TaskManagementAPI.csproj --configuration Release --no-restore

    - name: Run tests
      run: dotnet test ./TaskManagementAPI/TaskManagementAPI.csproj --no-restore --verbosity normal

    - name: Publish the application
      run: |
        mkdir -p ./publish
        dotnet publish ./TaskManagementAPI/TaskManagementAPI.csproj --configuration Release --output ./publish
        ls -la ./publish  # Debugging step to verify publish folder exists

    - name: Create deployment package (ZIP)
      run: |
        cd ./publish
        zip -r ../app-deployment.zip .
        cd ..

    - name: Upload deployment package
      uses: actions/upload-artifact@v4
      with:
        name: deployment-package
        path: app-deployment.zip

  deploy:
    runs-on: ubuntu-latest  # Use latest Ubuntu environment
    needs: build  # Run deploy after successful build job

    steps:
    - name: Checkout code
      uses: actions/checkout@v4  # Checkout repository

    - name: Download deployment package
      uses: actions/download-artifact@v4
      with:
        name: deployment-package
        path: ./

    - name: Deploy application to Elastic Beanstalk
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ${{ secrets.EB_APPLICATION_NAME }}
        environment_name: ${{ secrets.EB_ENVIRONMENT_NAME }}
        region: ${{ secrets.AWS_REGION }}
        version_label: "deploy-${{ github.sha }}"
        deployment_package: "app-deployment.zip"
